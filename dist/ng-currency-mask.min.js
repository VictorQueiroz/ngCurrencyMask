!function(){"use strict";angular.module("ngCurrencyMask",["ngCurrencyMask/Services","ngCurrencyMask/Directives","ngCurrencyMask/Filters"]).value("ngCurrencyMaskConfig",{matches:[{replace:/[^\d]/g,"with":""},{replace:/(\d{2})$/,"with":",$1"},{replace:/,(\d{3,})$/,"with":"$1,00"},{replace:/^(0{1,})/,"with":""},{replace:/^,(\d{2})$/,"with":"0,$1"},{replace:/(\d)(?=(\d{3})+(?!\d))/g,"with":"$1."},{replace:/^/,"with":"R$ "}]})}();
!function(){"use strict";angular.module("ngCurrencyMask/Service/Masker",[]).factory("Masker",["ngCurrencyMaskConfig",function(r){var n=function(n){var e=n.toString(),a=r.matches;return a.forEach(function(r){e=e.replace(r.replace,r.with)}),e},e=function(r){var e=n(r).replace(/\D/g,"");return e};return{maskValue:n,unmaskValue:e}}])}();
!function(){"use strict";angular.module("ngCurrencyMask/Filter/currencyMask",[]).filter("currencyMask",["Masker",function(r){var n=function(r){switch(r){case"mask":return 1;case"unmask":return 2}};return function(u,a){var a=a?n(a):n("mask");return 1===a?r.maskValue(u):2===a?r.unmaskValue(u):void 0}}])}();
!function(){"use strict";angular.module("ngCurrencyMask/Directives",["ngCurrencyMask/Directive/ngCurrencyMask"])}();
!function(){"use strict";angular.module("ngCurrencyMask/Filters",["ngCurrencyMask/Filter/currencyMask"])}();
!function(){"use strict";angular.module("ngCurrencyMask/Directive/ngCurrencyMask",[]).directive("ngCurrencyMask",["Masker",function(n){return{restrict:"A",require:["?ngModel"],link:function(r,e,u,t){var i=t[0],a=function(r){return n.maskValue(r)},c=function(r){return n.unmaskValue(r)},s=function(n){return c(n)};i.$parsers.push(s),r.$watch(u.ngModel,function(n){if(n&&!(n.length<1)){var r=a(n);r!=n&&(i.$setViewValue(r),i.$render())}})}}}])}();
!function(){"use strict";angular.module("ngCurrencyMask/Services",["ngCurrencyMask/Service/Masker"])}();
//# sourceMappingURL=data:application/json;base64,