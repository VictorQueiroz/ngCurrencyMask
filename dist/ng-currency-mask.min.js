!function(){"use strict";angular.module("ngCurrencyMask",["ngCurrencyMask/Directives"]).value("ngCurrencyMaskConfig",{matches:[{replace:/[^\d]/g,"with":""},{replace:/(\d{2})$/,"with":",$1"},{replace:/(\d)(?=(\d{3})+(?!\d))/g,"with":"$1."},{replace:/^/,"with":"R$ "}]})}();
!function(){"use strict";angular.module("ngCurrencyMask/Directives",["ngCurrencyMask/Directive/ngCurrencyMask"])}();
!function(){"use strict";angular.module("ngCurrencyMask/Directive/ngCurrencyMask",[]).directive("ngCurrencyMask",["ngCurrencyMaskConfig",function(r){return{restrict:"A",require:"?ngModel",link:function(n,e,c,t){var u=function(n){var e=n,c=r.matches;return c.forEach(function(r){e=e.replace(r.replace,r.with)}),e},i=function(r){return r.replace(/\D/g,"")},a=function(r){return i(r)};t.$parsers.push(a),n.$watch(c.ngModel,function(r){var n=u(r);n!=r&&(t.$setViewValue(n),t.$render())})}}}])}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImNvbXBvbmVudHNcXGRpcmVjdGl2ZXMuanMiLCJjb21wb25lbnRzXFxuZ0N1cnJlbmN5TWFzay1EaXJlY3RpdmUuanMiXSwibmFtZXMiOlsiYW5ndWxhciIsIm1vZHVsZSIsInZhbHVlIiwibWF0Y2hlcyIsInJlcGxhY2UiLCJ3aXRoIiwiZGlyZWN0aXZlIiwiY29uZmlnIiwicmVzdHJpY3QiLCJyZXF1aXJlIiwibGluayIsInNjb3BlIiwiZWxlbWVudCIsImF0dHJzIiwibmdNb2RlbCIsIm1hc2tWYWx1ZSIsIm1hc2tlZFZhbHVlIiwiZm9yRWFjaCIsImtleSIsInVubWFza1ZhbHVlIiwicGFyc2VyIiwiJHBhcnNlcnMiLCJwdXNoIiwiJHdhdGNoIiwiJHNldFZpZXdWYWx1ZSIsIiRyZW5kZXIiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0UsWUFFQUEsU0FDR0MsT0FBTyxrQkFBbUIsOEJBRTFCQyxNQUFNLHdCQUVSQyxVQUNJQyxRQUFTLFNBQVVDLE9BQU0sS0FDekJELFFBQVMsV0FBWUMsT0FBTSxRQUMzQkQsUUFBUywwQkFBMkJDLE9BQU0sUUFDMUNELFFBQVMsSUFBS0MsT0FBTTtDQ1ozQixXQUNDLFlBRUFMLFNBQ0VDLE9BQU8sNkJBQThCO0NDSnhDLFdBQ0MsWUFFQUQsU0FDRUMsT0FBTyw4Q0FFUEssVUFBVSxrQkFBbUIsdUJBQXdCLFNBQVVDLEdBQzlELE9BQ0VDLFNBQVUsSUFDVkMsUUFBUyxXQUNUQyxLQUFNLFNBQVVDLEVBQU9DLEVBQVNDLEVBQU9DLEdBSXJDLEdBQUlDLEdBQVksU0FBVWIsR0FDeEIsR0FBSWMsR0FBY2QsRUFDaEJDLEVBQVVJLEVBQU9KLE9BTW5CLE9BSkFBLEdBQVFjLFFBQVEsU0FBVUMsR0FDeEJGLEVBQWNBLEVBQVlaLFFBQVFjLEVBQUlkLFFBQVNjLEVBQUliLFFBRzlDVyxHQU1MRyxFQUFjLFNBQVVqQixHQUMxQixNQUFPQSxHQUFNRSxRQUFRLE1BQU8sS0FPMUJnQixFQUFTLFNBQVVsQixHQUNyQixNQUFPaUIsR0FBWWpCLEdBR3JCWSxHQUFRTyxTQUFTQyxLQUFLRixHQU90QlQsRUFBTVksT0FBT1YsRUFBTUMsUUFBUyxTQUFVWixHQUNwQyxHQUFJYyxHQUFjRCxFQUFVYixFQUV6QmMsSUFBZWQsSUFDaEJZLEVBQVFVLGNBQWNSLEdBQ3RCRixFQUFRVyIsImZpbGUiOiJuZy1jdXJyZW5jeS1tYXNrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAoKSB7XHJcbiAgJ3VzZSBzdHJpY3QnO1xyXG4gIFxyXG4gIGFuZ3VsYXJcclxuICAgIC5tb2R1bGUoJ25nQ3VycmVuY3lNYXNrJywgWyduZ0N1cnJlbmN5TWFzay9EaXJlY3RpdmVzJ10pXHJcblxyXG4gICAgLnZhbHVlKCduZ0N1cnJlbmN5TWFza0NvbmZpZycsIHtcclxuXHRcdFx0Ly8gTWF0Y2hlcyB3aG8gd2lsbCBiZSBhcHBsaWVkIHRvIHRoZSBpbnB1dCBjb250ZW50LlxyXG5cdFx0XHRtYXRjaGVzOiBbXHJcblx0XHQgICAge3JlcGxhY2U6IC9bXlxcZF0vZywgd2l0aDogJyd9LFxyXG5cdFx0ICAgIHtyZXBsYWNlOiAvKFxcZHsyfSkkLywgd2l0aDogJywkMSd9LFxyXG5cdFx0ICAgIHtyZXBsYWNlOiAvKFxcZCkoPz0oXFxkezN9KSsoPyFcXGQpKS9nLCB3aXRoOiAnJDEuJ30sXHJcblx0XHQgICAge3JlcGxhY2U6IC9eLywgd2l0aDogJ1IkICd9XHJcblx0XHQgIF0sXHJcblx0XHR9KTtcclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uICgpIHtcclxuXHQndXNlIHN0cmljdCc7XHJcblxyXG5cdGFuZ3VsYXJcclxuXHRcdC5tb2R1bGUoJ25nQ3VycmVuY3lNYXNrL0RpcmVjdGl2ZXMnLCBbJ25nQ3VycmVuY3lNYXNrL0RpcmVjdGl2ZS9uZ0N1cnJlbmN5TWFzayddKTtcclxufSkoKTsiLCIoZnVuY3Rpb24gKCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0YW5ndWxhclxyXG5cdFx0Lm1vZHVsZSgnbmdDdXJyZW5jeU1hc2svRGlyZWN0aXZlL25nQ3VycmVuY3lNYXNrJywgW10pXHJcblxyXG5cdFx0LmRpcmVjdGl2ZSgnbmdDdXJyZW5jeU1hc2snLCBbJ25nQ3VycmVuY3lNYXNrQ29uZmlnJywgZnVuY3Rpb24gKGNvbmZpZykge1xyXG5cdFx0ICByZXR1cm4ge1xyXG5cdFx0ICAgIHJlc3RyaWN0OiAnQScsXHJcblx0XHQgICAgcmVxdWlyZTogJz9uZ01vZGVsJyxcclxuXHRcdCAgICBsaW5rOiBmdW5jdGlvbiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzLCBuZ01vZGVsKSB7XHJcblx0XHQgICAgXHQvKipcclxuXHRcdCAgICBcdCAqIE1hc2sgQHZhbHVlIG1hdGNoaW5nIGl0IGNvbnRlbnRzLlxyXG5cdFx0ICAgIFx0ICovXHJcblx0XHQgICAgICB2YXIgbWFza1ZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcblx0XHQgICAgICAgIHZhciBtYXNrZWRWYWx1ZSA9IHZhbHVlLFxyXG5cdFx0ICAgICAgICBcdFx0bWF0Y2hlcyA9IGNvbmZpZy5tYXRjaGVzO1xyXG5cdFx0ICAgICAgICBcclxuXHRcdCAgICAgICAgbWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcclxuXHRcdCAgICAgICAgICBtYXNrZWRWYWx1ZSA9IG1hc2tlZFZhbHVlLnJlcGxhY2Uoa2V5LnJlcGxhY2UsIGtleS53aXRoKTtcclxuXHRcdCAgICAgICAgfSk7XHJcblx0XHQgICAgICAgIFxyXG5cdFx0ICAgICAgICByZXR1cm4gbWFza2VkVmFsdWU7XHJcblx0XHQgICAgICB9O1xyXG5cdFx0ICAgICAgXHJcblx0XHQgICAgICAvKipcclxuXHRcdCAgICAgICAqIFJldHVybiBAdmFsdWUgdG8gaXQgcmVhbCB2YWx1ZS5cclxuXHRcdCAgICAgICAqL1xyXG5cdFx0ICAgICAgdmFyIHVubWFza1ZhbHVlID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcblx0XHQgICAgICAgIHJldHVybiB2YWx1ZS5yZXBsYWNlKC9cXEQvZywgJycpO1xyXG5cdFx0ICAgICAgfTtcclxuXHRcdCAgICAgIFxyXG5cdFx0ICAgICAgLyoqXHJcblx0XHQgICAgICAgKiBQYXJzZXIgd2hvIHdpbGwgYmUgYXBwbGllZCB0byB0aGUgbmdNb2RlbFxyXG5cdFx0ICAgICAgICogYmVmb3JlIHRoZSBnb2VzIHRvIERPTS4gVGhhdCBpcyB0aGUgcmVhbCBuZ01vZGVsIHZhbHVlLlxyXG5cdFx0ICAgICAgICovXHJcblx0XHQgICAgICB2YXIgcGFyc2VyID0gZnVuY3Rpb24gKHZhbHVlKSB7XHJcblx0XHQgICAgICAgIHJldHVybiB1bm1hc2tWYWx1ZSh2YWx1ZSk7XHJcblx0XHQgICAgICB9O1xyXG5cdFx0ICAgICAgXHJcblx0XHQgICAgICBuZ01vZGVsLiRwYXJzZXJzLnB1c2gocGFyc2VyKTtcclxuXHRcdCAgICAgIFxyXG5cdFx0ICAgICAgLyoqXHJcblx0XHQgICAgICAgKiBFdmVyeXRpbWUgdGhlIGlucHV0IHN1ZmZlciBhIGNoYW5nZSxcclxuXHRcdCAgICAgICAqIHRoZSBkaXJlY3RpdmUgd2lsbCB1cGRhdGUgaXQgYW5kIG1hc2tcclxuXHRcdCAgICAgICAqIGFsbCB0aGUgdHlwZWQgY29udGVudC5cclxuXHRcdCAgICAgICAqL1xyXG5cdFx0ICAgICAgc2NvcGUuJHdhdGNoKGF0dHJzLm5nTW9kZWwsIGZ1bmN0aW9uICh2YWx1ZSkge1xyXG5cdFx0ICAgICAgICB2YXIgbWFza2VkVmFsdWUgPSBtYXNrVmFsdWUodmFsdWUpO1xyXG5cdFx0ICAgICAgICBcclxuXHRcdCAgICAgICAgaWYobWFza2VkVmFsdWUgIT0gdmFsdWUpIHtcclxuXHRcdCAgICAgICAgICBuZ01vZGVsLiRzZXRWaWV3VmFsdWUobWFza2VkVmFsdWUpO1xyXG5cdFx0ICAgICAgICAgIG5nTW9kZWwuJHJlbmRlcigpO1xyXG5cdFx0ICAgICAgICB9XHJcblx0XHQgICAgICB9KTtcclxuXHRcdCAgICB9XHJcblx0XHQgIH07XHJcblx0XHR9XSk7XHJcbn0pKCk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9